local _=game:GetService("HttpService") local _=game:GetService("TeleportService") local j=game:GetService("Players") local _=game:GetService("RunService") local _=game:GetService("Workspace") local a=game:GetService("UserInputService") local _=Instance.new("BindableEvent") local l=_.Event:Connect(function()end) local b=game:GetService("VirtualUser") local f=j.LocalPlayer local k=j.LocalPlayer local d={} local function c()for _,_ in pairs(workspace:GetChildren())do if _:FindFirstChild("CoinContainer")then return _.CoinContainer elseif _:FindFirstChild("Map")then if pcall(function()local _=_.Map.CoinContainer end)then return _.Map.CoinContainer end end end return nil end spawn(function()while wait()do if getgenv().Disconnect==true then wait(1) l:Disconnect() getgenv().Disconnect=false getgenv().nexus=false return else _:Fire()end end end) local h=loadstring(game:HttpGet("https://github.com/s-o-a-b/nexus/releases/download/nexus/nexus.txt"))() local g=loadstring(game:HttpGet("https://raw.githubusercontent.com/s-o-a-b/nexus/main/assets/SaveManager"))() local e=loadstring(game:HttpGet("https://raw.githubusercontent.com/s-o-a-b/nexus/main/assets/InterfaceManager"))() local m=h.Options g:SetLibrary(h) local i=h:CreateWindow({Title="nexus ","",SubTitle="",TabWidth=160,Size=UDim2.fromOffset(580,460),Acrylic=true,Theme="Dark"}) local n={Main=i:AddTab({Title="Main",Icon="rbxassetid://10723424505"}),Misc=i:AddTab({Title="Misc",Icon="rbxassetid://10709770431"}),Trap=i:AddTab({Title="Trap",Icon="rbxassetid://10723396107"}),Player=i:AddTab({Title="Player",Icon="rbxassetid://10747373176"}),Emotes=i:AddTab({Title="Emotes",Icon="rbxassetid://4335480896"}),Premium=premium=="premium"and i:AddTab({Title="Premium",Icon="rbxassetid://10709819149"}),Server=i:AddTab({Title="Server",Icon="rbxassetid://10734949856"}),Settings=i:AddTab({Title="Settings",Icon="settings"})} local _=n.Main:AddToggle("AutoFarm",{Title="Auto Farm",Default=false,Callback=function(_)if _ then repeat local _,_=pcall(function()task.wait() local c=c() if c then local function _(a)local _=game.Players.LocalPlayer local _=_.Character local b=_ and _:FindFirstChild("HumanoidRootPart") if b then local _=(b.Position-a.p).Magnitude local _=TweenInfo.new(_/70,Enum.EasingStyle.Linear,Enum.EasingDirection.In) local _=game:GetService("TweenService"):Create(b,_,{CFrame=a}) _:Play() _.Completed:Wait()end end if c and game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.Timer.Visible==true or game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.CashBag.Visible==true then local b=math.huge local e=nil local a=game.Players.LocalPlayer local d=a.Character local a=d and d:FindFirstChild("HumanoidRootPart") local a=a.Position for _,c in pairs(c:GetChildren())do if c.Name=='Coin_Server'then local _=c.Coin.Position local _=(a-_).Magnitude if _<b then b=_ e=c end end end if e then _(CFrame.new(e.Coin.CFrame.p)) for _=0,10,1 do d:SetPrimaryPartCFrame(d.PrimaryPart.CFrame*CFrame.Angles(0,math.rad(_),0)) wait(0.02)end e.Name='False_Coin' repeat wait()until e.Name~='Coin_Server' wait(1)end end end end)until not m.AutoFarm.Value or not l.Connected end end}) local _=n.Main:AddToggle("CoinChams",{Title="Coin Chams",Default=false,Callback=function(_)if _ then repeat task.wait() local _=c() if _ then for _,_ in pairs(_:GetChildren())do if _.Name=='Coin_Server'and not d[_]then local a=Instance.new("Highlight") a.Name="EspPareet" a.FillTransparency=0.5 a.FillColor=Color3.new(94/255,1,255/255) a.OutlineColor=Color3.new(94/255,1,255/255) a.OutlineTransparency=0 a.Parent=_.Parent d[_]=a end end end until not m.CoinChams.Value or not l.Connected for _,_ in pairs(d)do _:Destroy()end end end}) local _=n.Main:AddToggle("PlayerESP",{Title="Player Chams",Default=false,Callback=function(_)end}) spawn(function()while wait()do if not m.PlayerESP.Value and l.Connected then for _,_ in next,game:GetService('Players'):GetPlayers()do if _.Name~=game:GetService('Players').LocalPlayer.Name then pcall(function()_.Character.Highlight:Destroy()end)end end else local _=game:GetService("ReplicatedStorage") local a=_:FindFirstChild("GetPlayerData",true):InvokeServer() function CreateHighlight()for _,_ in pairs(j:GetChildren())do pcall(function()if _~=k and _.Character and not _.Character:FindFirstChild("Highlight")then Instance.new("Highlight",_.Character)end end)end end function UpdateHighlights()for _,a in pairs(j:GetChildren())do local _=a.Character and a.Character:FindFirstChild("Highlight") if a~=k and _ then if IsAlive(a)then if a.Name==Sheriff then _.FillColor=Color3.fromRGB(0,0,225)elseif a.Name==Murder then _.FillColor=Color3.fromRGB(225,0,0)elseif a.Name==Hero and not IsAlive(j:WaitForChild(Sheriff))then _.FillColor=Color3.fromRGB(0,0,225)else _.FillColor=Color3.fromRGB(76,215,134)end else _.FillColor=Color3.fromRGB(255,255,255)end end end end function IsAlive(_)local _=a[_.Name] return _ and not _.Killed and not _.Dead end Sheriff,Murder,Hero=nil,nil,nil for a,_ in pairs(a)do if _.Role=="Murderer"then Murder=a elseif _.Role=='Sheriff'then Sheriff=a elseif _.Role=='Hero'then Hero=a end end if m.PlayerESP.Value and l.Connected then CreateHighlight() UpdateHighlights()end if not l.Connected then for _,_ in next,game:GetService('Players'):GetPlayers()do if _.Name~=game:GetService('Players').LocalPlayer.Name then pcall(function()_.Character.Highlight:Destroy()end)end end return end end end end) local _=n.Main:AddToggle("GrabGun",{Title="Automatically Grab Gun",Default=false,Callback=function(_)if _ then repeat task.wait() local _,a=pcall(function()local _=j.LocalPlayer local _=_.Character local _=_:FindFirstChild("HumanoidRootPart") local a=GetMurderer() local b=game:GetService("Workspace"):FindFirstChild("GunDrop") local _=game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.CashBag.Visible==true if b and _ then local _=workspace:FindFirstChild(a) if _ then local a=_:WaitForChild("HumanoidRootPart") print(a.Position) local _=b.Position local _=(a.Position-_).Magnitude local a=game.Players.LocalPlayer if _>25 then if game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.Timer.Visible==false then local _=a.Character.HumanoidRootPart.CFrame wait(.5) a.Character.HumanoidRootPart.CFrame=b.CFrame a.Character.Humanoid.Jump=true wait(.3) a.Character.HumanoidRootPart.CFrame=_ end end end end end) if not _ then warn("An error occurred:",a)end until not m.GrabGun.Value or not l.Connected end end}) local _=n.Main:AddToggle("GunCham",{Title="Gun Dropped Cham",Default=false,Callback=function(_)if _ then local _=game:GetService("Workspace"):FindFirstChild("GunDrop") local a repeat task.wait() local _=game:GetService("Workspace"):FindFirstChild("GunDrop") if _ then a=_:FindFirstChild("GunESP") if not a then a=Instance.new("Highlight") a.Name="GunESP" a.FillTransparency=0.5 a.FillColor=Color3.new(94,1,255) a.OutlineColor=Color3.new(94,1,255) a.OutlineTransparency=0 a.Parent=_ end end until not m.GunCham.Value or not l.Connected if a then a:Destroy()end end end}) local _=n.Misc:AddToggle("KillAll",{Title="Kill Aura",Default=false,Callback=function(_)if _ then repeat task.wait() local _,_=pcall(function()local b=k.Backpack:FindFirstChild("Knife")or k.Character:FindFirstChild("Knife") local a=tonumber(m.Distance.Value) for _,_ in ipairs(j:GetPlayers())do if _~=k and _.Character~=nil then local c=_.Character.HumanoidRootPart local _=c.Position local _=(_-k.Character.HumanoidRootPart.Position).Magnitude if(_<=a)then firetouchinterest(c,b.Handle,1) firetouchinterest(c,b.Handle,0)end end end end)until not m.KillAll.Value or not l.Connected end end}) local _=n.Misc:AddSlider("Distance",{Title="Aura Distance",Default=5,Min=5,Max=50,Rounding=0,Callback=function(_)end}) local _=n.Misc:AddToggle("SilentAim",{Title="Silent Aim",Default=false,Callback=function(_)end}) local _=n.Misc:AddSlider("Slider",{Title="Accuracy",Default=5,Min=25,Max=100,Rounding=0,Callback=function(_)end}) local _=n.Misc:AddToggle("KillMurder",{Title="Kill Murder",Default=false,Callback=function(_)if _ then repeat local _,_=pcall(function()task.wait() local c=GetMurderer() local d=game.Players.LocalPlayer local _=d.Backpack:FindFirstChild("Gun")or d.Character:FindFirstChild("Gun") if not _ then game:GetService('Players').LocalPlayer.CameraMode=Enum.CameraMode.Classic end if c~=d.Name and d then local a=d.Backpack:FindFirstChild("Gun")or d.Character:FindFirstChild("Gun") if a then local _=k.Character:WaitForChild("Humanoid") _:EquipTool(a) game:GetService('Players').LocalPlayer.CameraMode=Enum.CameraMode.LockFirstPerson end if a and d and c then if workspace[d.Name].Gun.Handle.Reload.IsPlaying then local a=d.Character:FindFirstChild("HumanoidRootPart") local _=Vector3.new(-110,135,38.946128845215) a.CFrame=CFrame.new(_) repeat task.wait()until not workspace[d.Name].Gun.Handle.Reload.IsPlaying end local _=workspace:FindFirstChild(c) if _ and d then local b=_:FindFirstChild("HumanoidRootPart") local a=d.Character local _=a:FindFirstChild("HumanoidRootPart") if b and _ and d and c then local _=Vector3.new(0,0,6) local _=b.CFrame:PointToWorldSpace(_) a:SetPrimaryPartCFrame(CFrame.new(_)) if c then a:SetPrimaryPartCFrame(CFrame.new(_,b.Position)) local _=workspace.CurrentCamera _.CFrame=CFrame.new(_.CFrame.Position,(b.Position-Vector3.new(-0.5,0,1)))end spawn(function()wait(0.3) local _=game:GetService("Workspace").CurrentCamera.ViewportSize.X local a=game:GetService("Workspace").CurrentCamera.ViewportSize.Y local b=_/2 local _=a/2 game:GetService("VirtualInputManager"):SendMouseButtonEvent(b,_,0,true,game,1) game:GetService("VirtualInputManager"):SendMouseButtonEvent(b,_,0,false,game,1)end)end end end end end)until not m.KillMurder.Value or not l.Connected end end}) n.Misc:AddButton({Title="Kill All",Callback=function()local c=k.Backpack:FindFirstChild("Knife")or k.Character:FindFirstChild("Knife") if c and c:IsA("Tool")then local _=k.Character local _=_:WaitForChild("Humanoid") _:EquipTool(c) for _=1,3 do for _,_ in ipairs(j:GetPlayers())do if _~=k and _.Character then local a=_.Character:WaitForChild("HumanoidRootPart") local _=a.Position b:ClickButton1(Vector2.new()) firetouchinterest(a,c.Handle,1) wait(0.1) firetouchinterest(a,c.Handle,0)end end end end end}) local _=n.Trap:AddToggle("TrapTrail",{Title="Trap Trail",Default=false,Callback=function(_)if _ then pcall(function()local _=game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.Inventory.Main.Perks.Items.Container.Current.Container local a=true if _ then for _,_ in pairs(_:GetChildren())do if _:IsA("Frame")and _.ItemName.Label.Text=="Trap"then print(_.ItemName.Label.Text) a=false end end end if a then h:Notify({Title='Missing Trap',Content='Must own trap \n400 diamonds or 3K coins',Duration=5}) a=true end end) repeat task.wait() local a,_=pcall(function()local _=game.Players.LocalPlayer if _ then local _=_.Character and _.Character:FindFirstChild("HumanoidRootPart") if _ then local _=CFrame.new(_.Position) local a=game:GetService("ReplicatedStorage") local a=a:FindFirstChild("TrapSystem") if a and a:FindFirstChild("PlaceTrap")then a.PlaceTrap:InvokeServer(_)end end end end) if not a then warn("An error occurred:",_)end until not m.TrapTrail.Value or not l.Connected end end}) local _=n.Trap:AddToggle("AutoTrap",{Title="Trap All",Default=false,Callback=function(_)if _ then pcall(function()local _=game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.Game.Inventory.Main.Perks.Items.Container.Current.Container local a=true if _ then for _,_ in pairs(_:GetChildren())do if _:IsA("Frame")and _.ItemName.Label.Text=="Trap"then print(_.ItemName.Label.Text) a=false end end end if a then h:Notify({Title='Missing Trap',Content='Must own trap \n400 diamonds or 3K coins',Duration=5}) a=true end end) repeat task.wait() local _,a=pcall(function()local _=game:GetService("ReplicatedStorage") local b=_:FindFirstChild("TrapSystem") if b and b:FindFirstChild("PlaceTrap")then local a=game.Players.LocalPlayer local _=game.Players:GetPlayers() for _,_ in ipairs(_)do if _~=a then local _=_.Character and _.Character:FindFirstChild("HumanoidRootPart") if _ then local _=CFrame.new(_.Position) b.PlaceTrap:InvokeServer(_)end end end end end) if not _ then warn("An error occurred:",a)end until not m.AutoTrap.Value or not l.Connected end end}) local _=n.Trap:AddToggle("AutoDestroy",{Title="Auto Destroy Traps",Default=false,Callback=function(_)if _ then h:Notify({Title='Destroy Traps',Content='This will delete traps visually [less lag]',Duration=5}) repeat task.wait() local _,_=pcall(function()local _=workspace:FindFirstChild(k.Name) if _ and _:IsA("Model")then for _,_ in pairs(_:GetDescendants())do if _.Name=="Trap"then _:Destroy()end end end end)until not m.AutoDestroy.Value or not l.Connected end end}) local function b(_)local a=f.Character and f.Character:FindFirstChild("Humanoid") if a then a.WalkSpeed=_ end end local _=n.Player:AddToggle("WalkSpeed",{Title="Walkspeed",Default=false,Callback=function(_)if _ then repeat task.wait() b(m.Walk.Value)until not m.WalkSpeed.Value or not l.Connected b(16)end end}) local _=n.Player:AddSlider("Walk",{Title="Walk Speed",Default=16,Min=16,Max=200,Rounding=0,Callback=function(_)end}) local function b(_)local a=f.Character and f.Character:FindFirstChild("Humanoid") if a then a.JumpPower=_ end end local _=n.Player:AddToggle("JumpPower",{Title="Jump Power",Default=false,Callback=function(_)if _ then repeat task.wait() b(m.Jump.Value)until not m.JumpPower.Value or not l.Connected b(50)end end}) local _=n.Player:AddSlider("Jump",{Title="Jump Power",Default=50,Min=50,Max=200,Rounding=1,Callback=function(_)end}) local b local _=n.Player:AddToggle("InfiniteJump",{Title="Infinite Jump",Default=false,Callback=function(_)if _ then b=a.JumpRequest:Connect(function()k.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)end) repeat task.wait()until not m.InfiniteJump.Value or not l.Connected b:Disconnect()end end}) n.Emotes:AddButton({Title="Ninja",Callback=function()module:emote("ninja")end}) n.Emotes:AddButton({Title="Dab",Callback=function()module:emote("dab")end}) n.Emotes:AddButton({Title="Floss",Callback=function()module:emote("floss")end}) n.Emotes:AddButton({Title="Headless",Callback=function()module:emote("headless")end}) n.Emotes:AddButton({Title="Zen",Callback=function()module:emote("zen")end}) n.Emotes:AddButton({Title="Zombie",Callback=function()module:emote("zombie")end}) n.Emotes:AddButton({Title="Sit",Callback=function()module:emote("sit")end}) local _=n.Settings:AddToggle("Settings",{Title="Save Settings",Default=false,Callback=function(_)if _ then repeat task.wait(.1) g:Save(game.PlaceId)until not m.Settings.Value or not l.Connected end end}) n.Settings:AddButton({Title="Delete Setting Config",Callback=function()delfile("FLORENCE/settings/"..game.PlaceId..".json")end}) local _=n.Server:AddToggle("AutoRejoin",{Title="Auto Rejoin",Default=false,Callback=function(_)if _ then h:Notify({Title='Auto Rejoin',Content='You will rejoin if you are kicked or disconnected from the game',Duration=5}) repeat task.wait() local _,_,a=game:GetService('Players').LocalPlayer,game.CoreGui.RobloxPromptGui.promptOverlay,game:GetService('TeleportService') _.ChildAdded:connect(function(_)if _.Name=='ErrorPrompt'then a:Teleport(game.PlaceId) task.wait(2)end end)until m.AutoRejoin.Value or not l.Connected end end}) local _=n.Server:AddToggle("ReExecute",{Title="Auto ReExecute",Default=false,Callback=function(_)if _ then repeat task.wait() local _=(syn and syn.queue_on_teleport)or queue_on_teleport or(fluxus and fluxus.queue_on_teleport) if _ then _('loadstring(game:HttpGet("https://raw.githubusercontent.com/13B8B/nexus/main/loadstring"))()')end until not m.ReExecute.Value or not l.Connected end end}) n.Server:AddButton({Title="Rejoin-Server",Callback=function()game:GetService("TeleportService"):Teleport(game.PlaceId,Player)end}) n.Server:AddButton({Title="Server-Hop",Callback=function()local b=game:GetService("HttpService") local e=game:GetService("TeleportService") local _="https://games.roblox.com/v1/games/" local d,a=game.PlaceId,game.JobId local c=_..d.."/servers/Public?sortOrder=Desc&limit=100" local function _(_)local _=game:HttpGet(c..((_ and"&cursor=".._)or"")) return b:JSONDecode(_)end local b repeat local _=_(b) for _,_ in next,_.data do if _.playing<_.maxPlayers and _.id~=a then local a,_=pcall(e.TeleportToPlaceInstance,e,d,_.id,Player) if a then break end end end b=_.nextPageCursor until not b end}) local f,c,b=nil,nil,false function GetMurderer()for _,_ in pairs(j:GetChildren())do if _.Backpack:FindFirstChild("Knife")or _.Character:FindFirstChild("Knife")then return _.Name end end return nil end function GetSheriff()for _,_ in pairs(j:GetChildren())do if _.Backpack:FindFirstChild("Gun")or(_.Character and _.Character:FindFirstChild("Gun"))and _.Name=="Tool"then return _.Name end end return nil end coroutine.wrap(function()while true do task.wait(.5) local _,_=pcall(function()f=GetMurderer() c=GetSheriff() if f then end end)end end)() local a a=hookmetamethod(game,"__namecall",function(c,...)local _=getnamecallmethod() local b={...} if not checkcaller()then if typeof(c)=="Instance"then if c.Name=="ShootGun"and _=="InvokeServer"then if m.SilentAim.Value or m.KillMurder.Value or m.SilentAim.Value and m.KillMurder.Value then if f then local a=workspace[tostring(f)].HumanoidRootPart local _=a.AssemblyLinearVelocity local _=a.Position b[2]=_ end else return a(c,unpack(b))end end end end return a(c,unpack(b))end) local d d=hookmetamethod(game,"__namecall",function(e,...)local a=getnamecallmethod() local _={...} if not checkcaller()then if tostring(a)=="InvokeServer"and tostring(e)=="GetChance"then wait(13) local _,a=pcall(function()f=GetMurderer() c=GetSheriff()end) if not _ then warn("Error: "..a)end b=true end end return d(e,unpack(_))end) g:SetLibrary(h) e:SetLibrary(h) g:SetIgnoreIndexes({}) g:IgnoreThemeSettings() e:SetFolder("FLORENCE") g:SetFolder("FLORENCE") e:BuildInterfaceSection(n.Settings,n.Premium) g:Load(game.PlaceId) i:SelectTab(1)
